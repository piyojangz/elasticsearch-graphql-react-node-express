"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setTabs = void 0;

var _react = _interopRequireDefault(require("react"));

var _addons = _interopRequireDefault(require("@storybook/addons"));

var _prismjs = _interopRequireDefault(require("prismjs"));

require("prismjs/components/prism-typescript.js");

require("prismjs/components/prism-sass.js");

require("prismjs/themes/prism.css");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var Code =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Code, _React$Component);

  function Code(props, context) {
    var _this;

    _classCallCheck(this, Code);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Code).call(this, props, context));
    _this.state = {
      code: ''
    };
    _this.channelName = "soft/code/add_".concat(props.type);
    _this.onSelectTab = _this.onSelectTab.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }

  _createClass(Code, [{
    key: "onSelectTab",
    value: function onSelectTab(_ref) {
      var code = _ref.code,
          type = _ref.type;

      var formattedCode = type && code && _prismjs.default.highlight(code, _prismjs.default.languages[type]);

      this.setState({
        code: formattedCode
      });
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var _this$props = this.props,
          channel = _this$props.channel,
          api = _this$props.api;
      channel.on(this.channelName, this.onSelectTab);
      this.stopListeningOnStory = api.onStory(function () {
        _this2.onSelectTab('');
      });
    }
  }, {
    key: "render",
    value: function render() {
      var code = this.state.code;
      var type = this.props.type;
      return _react.default.createElement("div", null, code ? _react.default.createElement("pre", null, _react.default.createElement("code", null, _react.default.createElement("div", {
        dangerouslySetInnerHTML: {
          __html: code
        }
      }))) : _react.default.createElement("p", null, " No ", type, " code Found "));
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.stopListeningOnStory) {
        this.stopListeningOnStory();
      }

      this.unmounted = true;
      var _this$props2 = this.props,
          channel = _this$props2.channel,
          api = _this$props2.api;
      channel.removeListener(this.channelName, this.onSelectTab);
    }
  }]);

  return Code;
}(_react.default.Component);

var registerTab = function registerTab(_ref2) {
  var label = _ref2.label,
      type = _ref2.type;

  _addons.default.register("soft/code/add_".concat(type), function (api) {
    _addons.default.addPanel("soft/".concat(type, "/panel"), {
      title: label,
      render: function render() {
        return _react.default.createElement(Code, {
          channel: _addons.default.getChannel(),
          api: api,
          type: type
        });
      }
    });
  });
};

var setTabs = function setTabs(tabs) {
  var tabsToRender = [].concat(tabs);
  tabsToRender.forEach(function (t) {
    return registerTab(t);
  });
};

exports.setTabs = setTabs;